/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Child {
  created_at: Generated<Timestamp>;
  dad_id: number;
  deleted_at: Timestamp | null;
  id: Generated<number>;
  mom_id: number;
  updated_at: Generated<Timestamp>;
}

export interface Dad {
  created_at: Generated<Timestamp>;
  deleted_at: Timestamp | null;
  id: Generated<number>;
  updated_at: Generated<Timestamp>;
}

export interface Mom {
  created_at: Generated<Timestamp>;
  deleted_at: Timestamp | null;
  id: Generated<number>;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  child: Child;
  dad: Dad;
  mom: Mom;
}
